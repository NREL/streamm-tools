************************************************************************************
 This test illustrates the different ways ParticleContainer can set Particle 
 object data (eg the [] operator on ParticleContainer)
************************************************************************************ 

Initial atoms1 state from an empty container, populated with put() 
 Contains particle objects: 
1 {'position': [0.2, 1.3, 33.0], 'charge': 2.0, 'type': 'Si', 'mass': 1.23, 'tagsDict': {'type': 'Si'}}
2 {'position': [5.0, 2.3, -22.1], 'charge': 1.0, 'type': 'C', 'mass': 2.34, 'tagsDict': {'type': 'C'}}
3 {'position': [5.0, 2.3, -20.1], 'charge': 1.0, 'type': 'C', 'mass': 2.34, 'tagsDict': {'type': 'C'}}
4 {'position': [0.0, 2.3, -20.1], 'charge': 1.0, 'type': 'C', 'mass': 2.34, 'tagsDict': {'type': 'C'}}
 

Replacing ID tag 4 with p5 particle data 

atoms1 state 
 Contains particle objects: 
1 {'position': [0.2, 1.3, 33.0], 'charge': 2.0, 'type': 'Si', 'mass': 1.23, 'tagsDict': {'type': 'Si'}}
2 {'position': [5.0, 2.3, -22.1], 'charge': 1.0, 'type': 'C', 'mass': 2.34, 'tagsDict': {'type': 'C'}}
3 {'position': [5.0, 2.3, -20.1], 'charge': 1.0, 'type': 'C', 'mass': 2.34, 'tagsDict': {'type': 'C'}}
4 {'position': [9.0, -8.0, -80.1], 'charge': 1.0, 'type': 'Ar', 'mass': 4.0, 'tagsDict': {'type': 'Ar'}}
 

Setting ID tag that does not exist 5 with p6 particle data ---> atoms1[5]=p6 

Using [] operator for non-existent key
Cleaning particle container
